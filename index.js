const TelegramApi = require("node-telegram-bot-api");

const sequelize = require('./db');

const { menu, reg, partners, ourcars, back, profile, editprofile } = require('./keyboards');
const Users = require("./models");

const token = "5632609691:AAHJ6CvPeasSSrUHoGZePHEeLudoZv3sIR4";

const bot = new TelegramApi(token, { polling: true });

process.env["NTBA_FIX_350"] = 1;

const express = require('express')

const PORT = 5000;

const app = express()

app.use(express.json())
app.use(express.static('static'))
// app.use(fileUpload({}))
// app.use('/api', router)

async function startApp() {
  try {
    app.listen(PORT, () => console.log('SERVER STARTED ON PORT ' + PORT))
  } catch (e) {
    console.log(e)
  }
}


const continueSos = async (chatId) => {
  return bot.on('message', async (msg) => {
    if (msg.text.length >= 25) {
      let allUsersId = await Users.findAll({
        attributes: ['chatId'],
      });
      allUsersId.forEach(async (userId) => {
        if (userId.chatId != chatId) {
          await bot.sendMessage(userId.chatId, `–ü—Ä–∏—à–ª–∞ –ø—Ä–æ—Å—å–±–∞ –æ –ø–æ–º–æ—â–∏!\n–ù–∞–ø–∏—à–∏ –µ–π/–µ–º—É —Å–∫–æ—Ä–µ–µ!`)
          return bot.sendMessage(
            userId.chatId,
            msg.text,
            back
          )
        }
      })
      return (
        bot.sendMessage(chatId, `–í–∞—à–∞ –ø—Ä–æ—Å—å–±–∞ –æ –ø–æ–º–æ—â–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –Ω–∞–¥–µ—é—Å—å –≤–∞–º –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–º–æ–≥—É—Ç :)`, back),
        bot.removeListener("message")
      )
    } else if (msg.text === '/–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é') {
      return (
        bot.removeListener("message")
      )
    } else {
      return (
        bot.sendMessage(chatId, `–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ`),
        bot.removeListener("message")
      )
    }
  })
}

const showProfile = async (chatId) => {
  try {
    let profile = await Users.findOne({ where: { chatId: chatId } });
    if (profile.carImage) {
      await bot.sendPhoto(chatId, `${profile.carImage}`)
    }
    return (
      bot.sendMessage(chatId, `–í—ã: ${profile.userName} ${profile.userSurName}\n–í–∞—à–µ –∞–≤—Ç–æ: ${profile.carModel}\n–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ${profile.carYear}\n–ù–æ–º–µ—Ä –∞–≤—Ç–æ: ${profile.carGRZ}\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: ${profile.carEngineModel}`)
    )
  } catch (error) {
    console.log(error);
  }
}

const start = async () => {
  startApp()
  try {
    await sequelize.authenticate()
    await sequelize.sync()
    console.log('Connection has been established successfully.');
  } catch (e) {
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥ —Å–ª–æ–º–∞–ª–æ—Å—å', e);
  }

  bot.setMyCommands([
    { command: '/help', description: '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?' },
    { command: '/info', description: '–û –∫–ª—É–±–µ' },
  ])

  bot.on("message", async (msg) => {
    const text = msg.text;
    const chatId = msg.chat.id;

    try {
      if (text === "/start") {
        let userChatId = await Users.findOne({ where: { chatId: chatId } });
        if (userChatId) {
          return (
            bot.sendMessage(
              chatId,
              `–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? `,
              menu
            )
          )
        } else {
          return bot.sendMessage(
            chatId,
            `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç VAG –∫–ª—É–±–∞ –ß–µ–±–æ–∫—Å–∞—Ä!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é`,
            reg
          )
        }
      }
      if (text === "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è") {
        await bot.sendPhoto(
          chatId,
          'src/img/event1.jpeg'
        )
        return (
          bot.sendMessage(
            chatId,
            `–ë–ª–∏–∂–∞–π—à–∞—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è 2 –æ–∫—Ç—è–±—Ä—è\n–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏: –¢–µ–∞—Ç—Ä –æ–ø–µ—Ä—ã –∏ –±–∞–ª–µ—Ç–∞\n–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏: 20:00`
          )
        )
      }
      if (text === "–ü–∞—Ä—Ç–Ω–µ—Ä—ã") {
        return (
          bot.sendMessage(
            chatId,
            `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∫–ª—É–±–∞ ‚Üì`,
            partners
          )
        )
      }
      if (text === "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â—å") {
        return (
          bot.sendMessage(
            chatId,
            "–ù–∞–¥–µ—é—Å—å –≤—ã –Ω–µ —à—É—Ç–∏—Ç–µ, –≤–µ–¥—å –≤–∞—à–∞ –ø—Ä–æ—Å—å–±–∞ –ø—Ä–∏–ª–µ—Ç–∏—Ç –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
            {
              reply_markup: {
                keyboard: [
                  [{ text: '/–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é', callback_data: "/leaveSos" }],
                  [{ text: '–í—Å–µ —Å–µ—Ä—å–µ–∑–Ω–æ, —É –º–µ–Ω—è –±–µ–¥–∞.\n–•–æ—á—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data: "/continueSos" }],
                ],
              }
            }
          )
        )
      }
      if (text === "–í—Å–µ —Å–µ—Ä—å–µ–∑–Ω–æ, —É –º–µ–Ω—è –±–µ–¥–∞.\n–•–æ—á—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å") {
        await bot.sendMessage(
          chatId,
          "–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏ —Å–æ–æ–±—â–∏—Ç–µ –∞–¥—Ä–µ—Å, –≥–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å.\n–í–∞–∂–Ω–æ!!!\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º-–ø—Ä–æ—Ñ–∏–ª—å, –∏–Ω–∞—á–µ —Å –≤–∞–º–∏ –Ω–µ —Å–º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è",
          {
            reply_markup: {
              keyboard: [
                [{ text: '/–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é', callback_data: "/leaveSos" }],
              ],
            }
          }
        )
        return (
          bot.once('message', continueSos(chatId))
        )
      }
      if (text === "–ü—Ä–æ–¥–∞–∂–∞ –∞–≤—Ç–æ") {
        return (
          bot.sendMessage(chatId, `–≠—Ç–æ—Ç –æ—Ç–¥–µ–ª –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ`, back)
        )
      }
      if (text === "–ù–∞—à–∏ –∞–≤—Ç–æ") {
        return (
          bot.sendMessage(chatId, `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Üì`, ourcars)
        )
      }
      if (text === "–ü—Ä–æ—Ñ–∏–ª—å") {
        return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏:', profile);
      }
      if (text === "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å") {
        showProfile(chatId)
      }
      if (text === "–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ") {
        await bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /editcar\n–ù–∞–ø—Ä–∏–º–µ—Ä: /editcar volkswagen golf');
      }
      if (text === "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å") {
        return bot.sendMessage(chatId, '–ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?', editprofile);
      }
      if (text === "/help") {
        return (
          bot.sendMessage(
            chatId,
            `–ö–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ç–µ–±–µ –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è:\n\n/nomer –ù–û–ú–ï–†–ê–í–¢–û - –ø–æ–∏—Å–∫ –∞–≤—Ç–æ –æ–¥–Ω–æ–∫–ª—É–±–Ω–∏–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É(–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç A000AA00 –∏–ª–∏ A000AA000 –∏ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã)\n–ü—Ä–∏–º–µ—Ä:/nomer K868OP21\n\n/editcar –ú–ê–†–ö–ê –ú–û–î–ï–õ–¨ - –∏–∑–º–µ–Ω–∏—Ç—å –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n–ü—Ä–∏–º–µ—Ä:/editcar volkswagen tiguan\n\n/editnomer –ù–û–ú–ï–†–ê–í–¢–û - —Å–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç A000AA00 –∏–ª–∏ A000AA000 –∏ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã)\n–ü—Ä–∏–º–µ—Ä:/editnomer K868OP21\n\n/edityear –ì–ì–ì–ì - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–º–µ–Ω—ã –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n–ü—Ä–∏–º–µ—Ä:/edityear 2017\n\n/editeng XXXX - —Å–º–µ–Ω–∞ –º–æ–¥–µ–ª–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è\n–ü—Ä–∏–º–µ—Ä:/editeng CZDA\n`,
          )
        )
      }
      if (text === "/info") {
        return (
          bot.sendMessage(
            chatId,
            `–ü—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ–µ–µ—Ç!\n–ù–∞ —Å–≤—è–∑–∏ VW/SK CLUB 21 - –∫—Ä—É–ø–Ω–µ–π—à–µ–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–∞–≥–æ–≤–æ–¥–æ–≤ –ß—É–≤–∞—à–∏–∏‚òùüèª\n\n–ú—ã - –æ–¥–Ω–∞ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ—Ä–∂–∏—Ç—Å—è –¥—Ä—É–≥ –∑–∞ –¥—Ä—É–≥–∞, –¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ —Ä–∞–¥–æ—Å—Ç—è–º–∏ –∏ –Ω–µ—É–¥–∞—á–∞–º–∏, –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∂–∏–≤–∞—é—Ç —ç—Ç–æ, –ø–æ–º–æ–≥–∞—é—Ç –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç!\n–í—Å–µ –ª—é–±—è—Ç –ø–æ–∫—Ä–∞—Å–æ–≤–∞—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ª–∞—Å—Ç–æ—á–∫–∞–º–∏ –∏ –º—ã –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µüí•\n–í–≤–∏–¥—É —ç—Ç–æ–≥–æ —É –Ω–∞—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–≤—Å—Ç—Ä–µ—á–∏, –≥–¥–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –≤—Å—è –Ω–∞—à–∞ –¥—Ä—É–∂–Ω–∞—è —Å–µ–º—å—è –∏ –æ–±—Å—É–∂–¥–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ –±–æ–ª—å—à–æ–º –∫—Ä—É–≥—É.\n–ê –∑–∞—Ç–µ–º —Ñ–ª–∞–≥–∏ –≤ —Ä—É–∫–∏ –∏ –≤ –∫–æ–Ω–≤–æ–π.\n–ú—ã –ø—Ä–æ–µ–∑–∂–∞–µ–º –ø–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º —É–ª–∏—Ü–∞–º –ß–µ–±–æ–∫—Å–∞—Ä, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥—Ä—É–∂–Ω–æ—Å—Ç—å.\n–ù–µ –∑–∞–±—É–¥–µ–º —Å–∫–∞–∑–∞—Ç—å –∏ –ø—Ä–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö —É –Ω–∞—Å –Ω–µ–º–∞–ª–æ. –ò —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è. –û—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã –¥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ç—É—Ä–±–∏–Ω—ã - –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ñ–µ—Ä –≥–æ—Ç–æ–≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª—É–±–Ω—É—é —Å–∫–∏–¥–∫—É –¥–ª—è —Ç–∞–∫–∏—Ö —É–º–Ω–∏—á–µ–∫ –∏ –º–æ–ª–æ–¥—Ü–æ–≤üòÇüòÇ\n\n–£ —Ç–µ–±—è –Ω–µ—Ç –í–ê–ì–∞, –Ω–æ —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —Ñ–∞–Ω–∞—Ç –Ω–µ–º–µ—Ü–∫–æ–≥–æ –∞–≤—Ç–æ–ø—Ä–æ–º–∞? –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –∏ –ø—Ä–∏—Ö–æ–¥–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—Éü•∞ –ú—ã –ª—é–±–∏–º –∏ —É–≤–∞–∂–∞–µ–º –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n–î—É–º–∞–µ–º, —á—Ç–æ —Å—Ç–∞–ª–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–Ω—è—Ç–Ω–µ–µ.\n–ü–æ—ç—Ç–æ–º—É —á–µ–≥–æ –∂–¥–∞—Ç—å - –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º –≤ –∫–ª—É–±!!!üéâüéäüéâüéäüéâ`
          )
        )
      }
    } catch (e) {
      return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞!');
    }
  });

};



bot.onText(/–ú–µ–Ω—é/, async (msg) => {
  const text = msg.text;
  const chatId = msg.chat.id;

  return (
    bot.removeAllListeners(),
    bot.sendMessage(
      chatId,
      `–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
      menu
    ),
    start()
  )
})

bot.onText(/\/nomer (.+)/, async (msg, [source, match]) => {
  const chatId = msg.chat.id;
  let regExp = /^[abekmhopctyxABEKMHOPCTYX]\d{3}(?<!000)[abekmhopctyxABEKMHOPCTYX]{2}\d{2,3}$/;

  if (regExp.test(match)) {
    let queryGrz = match.toUpperCase().trimEnd();
    let carNum = await Users.findOne({ where: { carGRZ: queryGrz } });

    if (carNum) {
      if (carNum.carImage) {
        await bot.sendPhoto(chatId, `${carNum.carImage}`)
      }
      return (
        bot.sendMessage(chatId, `–í–ª–∞–¥–µ–ª–µ—Ü: ${carNum.userName} ${carNum.userSurName}\n–ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${carNum.carModel}\n–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ${carNum.carYear}\n–ú–æ–¥–µ–ª—å –¥–≤–∏–≥–∞—Ç–µ–ª—è: ${carNum.carEngineModel}`)
      )
    } else {
      return (
        bot.sendMessage(chatId, `–Ø –Ω–µ –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –∞–≤—Ç–æ(`)
      )
    }
  } else {
    return (
      bot.sendMessage(chatId, `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞`)
    )
  }

})

bot.onText(/\/editcar (.+)/, async (msg, [source, match]) => {
  const chatId = msg.chat.id;
  let regExp = /^[a-zA-Z\s]+\s[a-zA-Z0-9\s]+$/;

  if (regExp.test(match)) {
    let carName = match.toLowerCase().trimEnd();
    await Users.update({ carModel: carName }, {
      where: {
        chatId: msg.chat.id
      }
    })
    return (
      bot.sendMessage(chatId, `–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ`)
    )
  } else {
    return (
      bot.sendMessage(chatId, `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑`)
    )
  }
})

bot.onText(/\/editnomer (.+)/, async (msg, [source, match]) => {
  const chatId = msg.chat.id;
  let regExp = /^[abekmhopctyxABEKMHOPCTYX]\d{3}(?<!000)[abekmhopctyxABEKMHOPCTYX]{2}\d{2,3}$/;

  if (regExp.test(match)) {
    let queryGrz = match.toUpperCase().trimEnd();
    await Users.update({ carGRZ: queryGrz }, {
      where: {
        chatId: chatId
      }
    })
    return (
      bot.sendMessage(chatId, `–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ –≥–æ—Å. –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è`)
    )
  } else {
    return (
      bot.sendMessage(chatId, `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑`)
    )
  }
})

bot.onText(/\/edityear (.+)/, async (msg, [source, match]) => {
  const chatId = msg.chat.id;
  let date = new Date();
  let year = date.getFullYear();

  let regExp = /^\d+$/;

  if (regExp.test(match) && match >= 1900 && match <= year) {
    let carYear = match.trimEnd()
    await Users.update({ carYear: carYear }, {
      where: {
        chatId: chatId
      }
    })
    return (
      bot.sendMessage(chatId, `–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ`)
    )
  } else {
    return (
      bot.sendMessage(chatId, `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑`)
    )
  }

})

bot.onText(/\/editeng (.+)/, async (msg, [source, match]) => {
  const chatId = msg.chat.id;

  let regExp = /^[a-zA-Z]+$/;

  if (regExp.test(match)) {
    let engModel = match.toUpperCase().trimEnd();
    await Users.update({ carEngineModel: engModel }, {
      where: {
        chatId: chatId
      }
    })
    return (
      bot.sendMessage(chatId, `–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ –º–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è`)
    )
  } else {
    return (
      bot.sendMessage(chatId, `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑`)
    )
  }

})

bot.on("web_app_data", async (msg) => {
  // bot.sendMessage(msg.chat.id, msg.web_app_data.data);
  let strMsg = msg.web_app_data.data;
  let arrData = strMsg.split(',');

  let name = arrData[0].trim();
  let surname = arrData[1].trim();
  let car = arrData[2].trimEnd();
  let carYear = arrData[3].trim();
  let carGRZ = arrData[4].trimEnd();

  if (name == '' || surname == '' || surname == '' || car == '' || carYear == '' || carGRZ == '') {
    return bot.sendMessage(
      msg.chat.id,
      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑`,
      reg
    )
  } else {
    await Users.create({
      chatId: msg.chat.id,
      userName: name[0].toUpperCase() + name.substring(1),
      userSurName: surname[0].toUpperCase() + surname.substring(1),
      carModel: car.toLowerCase(),
      carYear: carYear,
      carGRZ: arrData[4].toUpperCase(),
      carEngineModel: arrData[5].toUpperCase()
    })
    return (
      bot.sendMessage(
        msg.chat.id,
        `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${name[0].toUpperCase() + name.substring(1)}!\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
        menu
      )
    )
  }
});


/* bot.sendMessage(chat_id, "1").then(() => {
  return (
    bot.sendMessage(chat_id, "2"))
}).then(() => {
  return (
    bot.sendMessage(chat_id, "3"))
}); */

/* bot.sendMessage(chat_id, "1").then(() => {
  return (
    bot.sendMessage(chat_id, "2"))
}).then(() => {
  return (
    bot.sendMessage(chat_id, "3"))
}); */

start();

